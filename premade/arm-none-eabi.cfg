#{DEST: bin/arm-none-eabi.cfg}
#{LICENSE: NON-CMSIS}

# Clang allows command line options to be grouped into configuration files like this one. Clang
# searches for default configuration files when it is run. In this case, the name of the file
# matches the "--target" option it should be used with, so Clang will load this by default. This
# is located in the same location as the Clang and LLVM binaries so it can be found.
#
# This file will set options to let Clang find other files associated with the PIC32/SAM devices,
# such as their linker and header files, so that those device files, library files, and Clang/LLVM
# can be distributed as a standalone package.
#
# See https://clang.llvm.org/docs/UsersManual.html#configuration-files for more information on
# configuration files for Clang.
#

# Specify a sysroot so hopefully Clang will look only in its install location rather than trying
# to find headers and stuff in actual system directories. This is also where "multilib.yaml" is
# located to provide multilib support to Clang.
--sysroot=<CFGDIR>/../cortex-m

# Point Clang to where the device-specific configuration files are located so that a user can
# specify a device by simply adding "--config=<device>.cfg" on the command line.
# A user can override this by specifying a user directory with "--config-user-dir=<dir>". Clang will
# search user directories before system directories.
--config-system-dir=<CFGDIR>/../cortex-m/lib

# Specify system include directories
-isystem <CFGDIR>/../cortex-m/CMSIS/Core/Include
-isystem <CFGDIR>/../cortex-m/include

# Ensure we are using the linker and runtimes bundled with this toolchain. Clang can try to use
# the system runtime and linker, which we do not want.
-rtlib=compiler-rt
-fuse-ld=lld

# Library directories are determined through "multilib.yaml" in the sysroot and the device-spefic
# configuration file.
